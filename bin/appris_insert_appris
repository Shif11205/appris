#!/bin/bash

# -----------------------------------------------------------------------------
# Local variables
VER=0.1b
VERDATE="1-Apr-2013"

FILENAME=`basename $0`
FILENAME="${FILENAME%.*}"
DIRNAME=`dirname $0`

CONF_DB=""
CONF_SPECIES=""
METHODS=""
GENE_LIST=""
INPUT_DIR=""
LOG_LEVEL=""

# -----------------------------------------------------------------------------
# Load external functions
source ${DIRNAME}/appris_env

# -----------------------------------------------------------------------------
# Usage

USAGE="
\n
 APPRIS's binary package.\n
\n
 Name:\n
\t appris_insert_appris\n
\n
 Description:\n
\t Insert annotations into APPRIS database.\n
\n
 Required arguments:\n
\t -d [-dbconf]\n
\t\t INI file for database configuration\n
\n
\t -c [-conf]\n
\t\t Source file with env variables for the input dataset\n
\n
 Optional arguments:\n
\t -i, -in\n
\t\t Input path\n
\n
\t -m [-method]\n
\t\t Methods which will execute (by default, all):\n
\t\t firestar,matador3d,spade,corsair,corsair_alt,thump,crash,appris\n
\n
\t -l, -loglevel\n
\t\t info\n
\t\t debug\n
\n
\t -v [version]\n
\t -h [help]\n
\n
\n
 Author: Jose Manuel Rodriguez Carrasco -jmrodriguez@cnio.es- (INB-GN2,CNIO)\n
\n
"

# -----------------------------------------------------------------------------
# Get input parameters

while expr "//$1" : //- >/dev/null
do
	case "$1" in
		-d | -dbconf )
			CONF_DB=$2
			shift
			;;
		-c | -conf )
			CONF_SPECIES=$2
			shift
			;;
		-m | -methods )
			METHODS=$2
			shift
			;;
		-g | -genes )
			GENE_LIST=$2
			shift
			;;
		-i | -in )
        	INPUT_DIR=$2
        	shift
			;;
		-l | -loglevel )
			case "$2" in
				info | debug )
		        	LOG_LEVEL=$2
					;;
				* )
					echo Unknown loglevel: "$2" 
					echo -e $USAGE
					exit 1
					;;
			esac
			shift
			;;			
		-h | -help )
			echo -e $USAGE		
			exit
			;;
		-v | -version )
			echo "$VER", "$VERDATE"
			exit
			;;
		* )
			echo Unknown option: "$1"
			echo -e $USAGE
			exit 1
			;;
	esac
	shift
done

if [ "${CONF_DB}" == "" ]; then
	echo You must specify the config file INI of database!
	echo -e $USAGE
	exit 1
fi

if [ "${CONF_SPECIES}" == "" ]; then
	echo You must specify at least one config file for SPECIES!
	echo -e $USAGE
	exit 1
fi

if [ "${INPUT_DIR}" != "" ]; then
	APPRIS_ANNOT_DIR="${INPUT_DIR}"
	APPRIS_DATA_DIR="${INPUT_DIR}"
fi

# -----------------------------------------------------------------------------
# Prepare Environment from config file for SPECIES
load_appris_specie_env "${CONF_SPECIES}" "verbose"

prepare_workspace "${APPRIS_DATA_DIR}"

# -----------------------------------------------------------------------------
# Get method script name
METHOD_SCRIPT="insert_appris"

# -----------------------------------------------------------------------------
# Required var declarations
INPATH_PARAMETERS=""
if [ "${APPRIS_ANNOT_DIR}" != "" ]; then
	INPATH_PARAMETERS=" --inpath=${APPRIS_ANNOT_DIR}"
else
	echo Error within env variables: APPRIS_ANNOT_DIR!
	exit 1
fi
if [ "${APPRIS_SPECIES}" != "" ]; then
	SPECIES_ID=$(echo ${APPRIS_SPECIES} | tr "[:upper:]" "[:lower:]" | sed 's/ /_/')
else
	echo Error within env variables: APPRIS_SPECIES!
	exit 1
fi
DB_PARAMETERS=""
if [ "${CONF_DB}" != "" ]; then
	DB_PARAMETERS=" --apprisdb-conf=${CONF_DB}"
fi

# -----------------------------------------------------------------------------
# Optional var declarations
ENSEMBL_PARAMETERS=""
GENCODE_PARAMETERS=""
if [[ "${GENCODE_ANNOTATION_FILE}" != "" && "${GENCODE_TRANSCRIPT_FILE}" != "" && "${GENCODE_TRANSLATION_FILE}" != "" ]]; then
	GENCODE_PARAMETERS=" --data=${GENCODE_ANNOTATION_FILE}"
	#GENCODE_PARAMETERS+=" --transc=${GENCODE_TRANSCRIPT_FILE}"
	#GENCODE_PARAMETERS+=" --transl=${GENCODE_TRANSLATION_FILE}"
else
	if [ "${APPRIS_E_VERSION}" != "" ]; then
		ENSEMBL_PARAMETERS=" --e-version=${APPRIS_E_VERSION}"
	else
		if [ "${GENCODE_TRANSLATION_FILE}" != "" ]; then
			GENCODE_PARAMETERS=" --transl=${GENCODE_TRANSLATION_FILE}"
		else	
			echo "Error within env variables: APPRIS required GENCODE | ENSEMBL | SEQUENCE data input!!"
			exit 1
		fi
	fi
fi
GENE_LIST_PARAMETERS=""
if [ "${GENE_LIST}" != "" ]; then
	GENE_LIST_PARAMETERS=" --gene-list=${GENE_LIST}"
fi
METHOD_PARAMETERS=""
if [ "${METHODS}" != "" ]; then
	METHOD_PARAMETERS=" --methods=${METHODS}"
fi

# -----------------------------------------------------------------------------
# Create database
if [ "${CONF_DB}" != "" ]; then
	echo "================="
	db_params=$(parse_inifile "${CONF_DB}" "APPRIS_DATABASES")
	echo "appris_db_create $db_params"
	appris_db_create $db_params
	echo "================="
fi


# -----------------------------------------------------------------------------
# Run method
SCRIPT="${APPRIS_SCRIPTS_DIR}/${METHOD_SCRIPT}.pl"

# From Data,Transc,Transl files
if [[ ("${GENCODE_ANNOTATION_FILE}" != "" && "${GENCODE_TRANSCRIPT_FILE}" != "" && "${GENCODE_TRANSLATION_FILE}" != "") ||  ("${GENCODE_TRANSLATION_FILE}" != "") ]]; then

	# chromsome by chromosome
	if [ "${APPRIS_CHR_LIST}" != "" ] ; then
		CHROMOSOME=(${APPRIS_CHR_LIST//,/ })
		INDEX=${#CHROMOSOME[@]}
	else
	# one time
		INDEX=1
	fi
	
	for ((i=0;i<$INDEX;i++)); do
	
		# pos parameters
		POS_PARAMETERS=""
		if [ "${CHROMOSOME[${i}]}" != "" ]; then
			CHR="${CHROMOSOME[${i}]}"
			POSITION="${CHR}"
			POS_PARAMETERS=" --position=${POSITION}"
			INPATH_PARAMETERS=" --inpath=${APPRIS_ANNOT_DIR}/${POSITION}"			
			LOG_POS=".${POSITION}"
		fi
		# local parameters
		LOG_PARAMETERS=""
		if [ "$LOG_LEVEL" != "" ]; then
			prepare_workspace "${APPRIS_WORKSPACE_LOG_DIR}"
			LOG_FILENAME="${APPRIS_WORKSPACE_LOG_DIR}/${FILENAME}.${SPECIES_ID}${LOG_POS}.log"
			LOG_PARAMETERS=" --loglevel=${LOG_LEVEL} --logappend --logfile=${LOG_FILENAME}"
		fi	
		
		# print trace
		echo "================="
		echo "perl ${SCRIPT}"
		echo " --species="${APPRIS_SPECIES}""		
		echo " ${DB_PARAMETERS}"
		echo " ${POS_PARAMETERS}"
		echo " ${GENCODE_PARAMETERS}"
		echo " ${ENSEMBL_PARAMETERS}"
		echo " ${GENE_LIST_PARAMETERS}"
		echo " ${METHOD_PARAMETERS}"
		echo " ${INPATH_PARAMETERS}"
		echo " ${LOG_PARAMETERS}"
	
		# run method
		perl ${SCRIPT} \
			--species="${APPRIS_SPECIES}" \
			${DB_PARAMETERS} \
			${POS_PARAMETERS} \
			${GENCODE_PARAMETERS} \
			${ENSEMBL_PARAMETERS} \
			${GENE_LIST_PARAMETERS} \
			${METHOD_PARAMETERS} \
			${INPATH_PARAMETERS} \
			${LOG_PARAMETERS}
		echo "================="
				
	done

else
# From a given list of genes

	if [[ "${APPRIS_GENE_LIST}" != "" ]] ; then
	
		# local parameters
		LOG_PARAMETERS=""
		if [ "$LOG_LEVEL" != "" ]; then
			LOG_FILENAME="${APPRIS_WORKSPACE_LOG_DIR}/${FILENAME}.${SPECIES_ID}.log"
			LOG_PARAMETERS=" --loglevel=${LOG_LEVEL} --logappend --logfile=${LOG_FILENAME}"
		fi	
	
		# print trace
		echo "================="
		echo "perl ${SCRIPT}"
		echo " --species="${APPRIS_SPECIES}""
		echo " ${DB_PARAMETERS}"
		echo " ${POS_PARAMETERS}"
		echo " ${GENCODE_PARAMETERS}"
		echo " ${ENSEMBL_PARAMETERS}"
		echo " ${GENE_LIST_PARAMETERS}"
		echo " ${METHOD_PARAMETERS}"
		echo " ${INPATH_PARAMETERS}"
		echo " ${LOG_PARAMETERS}"
	
		# run method
		perl ${SCRIPT} \
			--species="${APPRIS_SPECIES}" \
			${DB_PARAMETERS} \
			${POS_PARAMETERS} \
			${GENCODE_PARAMETERS} \
			${ENSEMBL_PARAMETERS} \
			${GENE_LIST_PARAMETERS} \
			${METHOD_PARAMETERS} \
			${INPATH_PARAMETERS} \
			${LOG_PARAMETERS}
		echo "================="
	
	fi
fi

# -----------------------------------------------------------------------------
# Backup database
if [ "${CONF_DB}" != "" ]; then
	echo "================="
	db_params=$(parse_inifile "${CONF_DB}" "APPRIS_DATABASES")
	echo "appris_db_backup $db_params -o ${APPRIS_DATA_DIR}/appris_db.dump.gz"
	appris_db_backup $db_params -o ${APPRIS_DATA_DIR}/appris_db.dump.gz
	echo "================="
fi
