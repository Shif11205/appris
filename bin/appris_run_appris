#!/bin/bash

# -----------------------------------------------------------------------------
# Load environmental variables
# If you do not trust the path, configure below:
# SYSTEM=`uname -s`
# if [ "$SYSTEM" = Darwin ]
# then
# 	source /etc/bashrc
# 	source /etc/profile
# 	source ${HOME}/.bash_profile
# elif [ "$SYSTEM" = Linux ]
# then
# 	source /etc/profile
# 	source /etc/bash.bashrc
# 	source ${HOME}/.bashrc
# fi

VER=0.1b
VERDATE="1-Apr-2013"

FILENAME=`basename $0`
FILENAME="${FILENAME%.*}"
DIRNAME=`dirname $0`

CONF_SPECIES=""
METHODS=""
OUTPUT_DIR=""
EMAIL=""
LOG_LEVEL=""

# -----------------------------------------------------------------------------
# Load external functions
source ${DIRNAME}/appris_env

# -----------------------------------------------------------------------------
# Usage

USAGE="
\n
 APPRIS's binary package.\n
\n
 Name:\n
\t appris\n
\n
 Description:\n
\t global script that runs APPRIS for GENCODE and ENSEMBL.\n
\n
Required arguments:\n
\t -c [-conf]\n
\t\t Source file with env variables for the input dataset\n
\n
Optional arguments:\n
\t -m [-method]\n
\t\t Methods which will execute:\n
\t\t firestar,matador3d,spade,corsair,thump,crash,proteo,appris\n
\t\t none\n
\t\t indata  -> create input data files\n
\t\t compara -> create Ensembl-Compara alignments\n
\t\t ucsc    -> create UCSC alignments\n
\n
\t -d [-trifid]\n
\t\t TRIFID predictions file\n
\n
\t -o [-out]\n
\t\t Output path\n
\n
\t -e [-email]\n
\t\t Email\n
\n
\t -l [-loglevel]\n
\t\t info\n
\t\t debug\n
\n
\t -v [-version]\n
\t -h [-help]\n
\n
\n
 Author: Jose Manuel Rodriguez Carrasco -jmrodriguez@cnio.es- (INB-GN2,CNIO)\n
\n
"

# -----------------------------------------------------------------------------
# Get input parameters

while expr "//$1" : //- >/dev/null
do
	case "$1" in
		-c | -conf )
			CONF_SPECIES=$2
			shift
			;;
		-m | -methods )
			METHODS=$2
			shift
			;;
		-d | -trifid )
			TRIFID_PRED_FILE=$2
			shift
			;;
		-o | -out )
        	OUTPUT_DIR=$2
        	shift
			;;
		-e | -email )
			EMAIL=$2
			shift
			;;
		-l | -loglevel )
			case "$2" in
				info | debug )
		        	LOG_LEVEL=$2
					;;
				* )
					echo Unknown loglevel: "$2" 
					echo -e $USAGE
					exit 1
					;;
			esac
			shift
			;;			
		-h | -help )
			echo -e $USAGE		
			exit
			;;
		-v | -version )
			echo "$VER", "$VERDATE"
			exit
			;;
		* )
			echo Unknown option: "$1"
			echo -e $USAGE
			exit 1
			;;
	esac
	shift
done

if [ "${CONF_SPECIES}" == "" ]; then
	echo You must specify at least one config file for SPECIES!
	echo -e $USAGE
	exit 1
fi

# -----------------------------------------------------------------------------
# Prepare Environment from config file for SPECIES
load_appris_specie_env "${CONF_SPECIES}" "verbose"

# -----------------------------------------------------------------------------
# Get method script name
METHOD_SCRIPT="run_appris"

# -----------------------------------------------------------------------------
# Required var declarations
OUTPATH_PARAMETERS=""
if [ "${APPRIS_ANNOT_DIR}" != "" ]; then
	OUTPATH_PARAMETERS=" --outpath=${APPRIS_ANNOT_DIR}"
else
	echo Error within env variables: APPRIS_ANNOT_DIR!
	exit 1
fi
if [ "${APPRIS_SPECIES}" != "" ]; then
	SPECIES_ID=$(echo ${APPRIS_SPECIES} | tr "[:upper:]" "[:lower:]" | sed 's/ /_/')
else
	echo Error within env variables: APPRIS_SPECIES!
	exit 1
fi

# -----------------------------------------------------------------------------
# Inputs data declarations
ENSEMBL_PARAMETERS=""
GENCODE_PARAMETERS=""
if [[ "${GENCODE_ANNOTATION_FILE}" != "" && "${GENCODE_TRANSCRIPT_FILE}" != "" && "${GENCODE_TRANSLATION_FILE}" != "" ]]; then
	GENCODE_PARAMETERS=" --data=${GENCODE_ANNOTATION_FILE}"
	GENCODE_PARAMETERS+=" --transc=${GENCODE_TRANSCRIPT_FILE}"
	GENCODE_PARAMETERS+=" --transl=${GENCODE_TRANSLATION_FILE}"
else
	if [ "${APPRIS_E_VERSION}" != "" ]; then
		ENSEMBL_PARAMETERS=" --e-version=${APPRIS_E_VERSION}"
	else
		if [ "${GENCODE_TRANSLATION_FILE}" != "" ]; then
			GENCODE_PARAMETERS=" --transl=${GENCODE_TRANSLATION_FILE}"
		else	
			echo Error within env variables: APPRIS required GENCODE | ENSEMBL | SEQUENCE data input!!
			exit 1
		fi
	fi		
fi
GENE_LIST_PARAMETERS=""
if [ "${APPRIS_GENE_LIST}" != "" ]; then
	GENE_LIST_PARAMETERS=" --gene-list=${APPRIS_GENE_LIST}"
fi
METHOD_PARAMETERS=""
if [ "${METHODS}" != "" ]; then
	METHOD_PARAMETERS=" --methods=${METHODS}"
fi
TRIFID_PARAMETERS=""
if [ "${TRIFID_PRED_FILE}" != "" ]; then
	TRIFID_PARAMETERS=" --trifid=${TRIFID_PRED_FILE}"
fi
T_ALIGN_PARAMETERS=""
if [[ "${APPRIS_TYPE_ALIGN}" != "" && "${APPRIS_E_VERSION}" != "" ]]; then
	T_ALIGN_PARAMETERS=" --t-align=${APPRIS_TYPE_ALIGN}"
	ENSEMBL_PARAMETERS=" --e-version=${APPRIS_E_VERSION}"
fi
if [ "${OUTPUT_DIR}" != "" ]; then
	APPRIS_ANNOT_DIR="${OUTPUT_DIR}"
fi
EMAIL_PARAMETERS=""
if [ "${EMAIL}" != "" ]; then
	EMAIL_PARAMETERS=" --email=${EMAIL}"
fi  

# -----------------------------------------------------------------------------
# Cached declarations
CACHED_PARAMETERS=""
if [ "${APPRIS_CACHED_PATH}" != "" ]; then
	CACHED_PARAMETERS=" --cached-path=${APPRIS_CACHED_PATH}"
fi

# -----------------------------------------------------------------------------
# Parallel declarations
NUM_PROC_PARAMETERS=""
if [ "${APPRIS_NUM_PARALLEL_PROC}" != "" ]; then
	NUM_PROC_PARAMETERS=" --num-process=${APPRIS_NUM_PARALLEL_PROC}"
fi
CLUSTER_PARAMETERS=""
if [ "${APPRIS_SCRIPTS_CLUSTER_INI}" != "" ]; then
	CLUSTER_PARAMETERS=" --cluster-conf=${APPRIS_SCRIPTS_CLUSTER_INI}"
fi

# -----------------------------------------------------------------------------
# Run method
SCRIPT="${APPRIS_SCRIPTS_DIR}/${METHOD_SCRIPT}.pl"

# From Data,Transc,Transl files
if [[ ("${GENCODE_ANNOTATION_FILE}" != "" && "${GENCODE_TRANSCRIPT_FILE}" != "" && "${GENCODE_TRANSLATION_FILE}" != "") ||  ("${GENCODE_TRANSLATION_FILE}" != "") ]]; then

	# chromsome by chromosome
	if [ "${APPRIS_CHR_LIST}" != "" ] ; then
		CHROMOSOME=(${APPRIS_CHR_LIST//,/ })
		INDEX=${#CHROMOSOME[@]}
	else
	# one time
		INDEX=1
	fi
	
	for ((i=0;i<$INDEX;i++)); do
	
		# pos parameters
		POS_PARAMETERS=""
		if [ "${CHROMOSOME[${i}]}" != "" ]; then
			CHR="${CHROMOSOME[${i}]}"
			POSITION="${CHR}"
			POS_PARAMETERS=" --position=${POSITION}"
			OUTPATH_PARAMETERS=" --outpath=${APPRIS_ANNOT_DIR}/${POSITION}"			
			LOG_POS=".${POSITION}"
		fi
		# local parameters
		LOG_PARAMETERS=""
		if [ "$LOG_LEVEL" != "" ]; then
			prepare_workspace "${APPRIS_WORKSPACE_LOG_DIR}"
			LOG_FILENAME="${APPRIS_WORKSPACE_LOG_DIR}/${FILENAME}.${SPECIES_ID}${LOG_POS}.log"
			LOG_PARAMETERS=" --loglevel=${LOG_LEVEL} --logappend --logfile=${LOG_FILENAME}"
		fi	
		
		# print trace
		echo "================="
		echo "perl ${SCRIPT}"
		echo " --species="${APPRIS_SPECIES}""
		echo " ${POS_PARAMETERS}"
		echo " ${GENCODE_PARAMETERS}"
		echo " ${ENSEMBL_PARAMETERS}"
		echo " ${GENE_LIST_PARAMETERS}"
		echo " ${METHOD_PARAMETERS}"
		echo " ${TRIFID_PARAMETERS}"
		echo " ${T_ALIGN_PARAMETERS}"
		echo " ${CACHED_PARAMETERS}"
		echo " ${NUM_PROC_PARAMETERS}"
		echo " ${CLUSTER_PARAMETERS}"
		echo " ${OUTPATH_PARAMETERS}"
		echo " ${EMAIL_PARAMETERS}"
		echo " ${LOG_PARAMETERS}"
	
		# run method
		perl ${SCRIPT} \
			--species="${APPRIS_SPECIES}" \
			${POS_PARAMETERS} \
			${GENCODE_PARAMETERS} \
			${ENSEMBL_PARAMETERS} \
			${GENE_LIST_PARAMETERS} \
			${METHOD_PARAMETERS} \
			${TRIFID_PARAMETERS} \
			${T_ALIGN_PARAMETERS} \
			${CACHED_PARAMETERS} \
			${NUM_PROC_PARAMETERS} \
			${CLUSTER_PARAMETERS} \
			${OUTPATH_PARAMETERS} \
			${EMAIL_PARAMETERS} \
			${LOG_PARAMETERS}
		echo "================="
						
	done

else
# From a given list of genes

	if [[ "${APPRIS_GENE_LIST}" != "" ]] ; then
	
		# local parameters
		LOG_PARAMETERS=""
		if [ "$LOG_LEVEL" != "" ]; then
			LOG_FILENAME="${APPRIS_WORKSPACE_LOG_DIR}/${FILENAME}.${SPECIES_ID}.log"
			LOG_PARAMETERS=" --loglevel=${LOG_LEVEL} --logappend --logfile=${LOG_FILENAME}"
		fi	
	
		# print trace
		echo "================="
		echo "perl ${SCRIPT}"
		echo " --species="${APPRIS_SPECIES}""
		echo " ${GENCODE_PARAMETERS}"
		echo " ${ENSEMBL_PARAMETERS}"
		echo " ${GENE_LIST_PARAMETERS}"
		echo " ${METHOD_PARAMETERS}"
		echo " ${TRIFID_PARAMETERS}"
		echo " ${T_ALIGN_PARAMETERS}"
		echo " ${CACHED_PARAMETERS}"
		echo " ${NUM_PROC_PARAMETERS}"
		echo " ${CLUSTER_PARAMETERS}"
		echo " ${OUTPATH_PARAMETERS}"
		echo " ${EMAIL_PARAMETERS}"
		echo " ${LOG_PARAMETERS}"
	
		# run method
		perl ${SCRIPT} \
			--species="${APPRIS_SPECIES}" \
			${GENCODE_PARAMETERS} \
			${ENSEMBL_PARAMETERS} \
			${GENE_LIST_PARAMETERS} \
			${METHOD_PARAMETERS} \
			${TRIFID_PARAMETERS} \
			${T_ALIGN_PARAMETERS} \
			${CACHED_PARAMETERS} \
			${NUM_PROC_PARAMETERS} \
			${CLUSTER_PARAMETERS} \
			${OUTPATH_PARAMETERS} \
			${EMAIL_PARAMETERS} \
			${LOG_PARAMETERS} \
		echo "================="
		
	fi
fi
